group 'com.wusong'
version '1.0'

buildscript {
    repositories {
        mavenLocal()
        maven { url 'http://repo.spring.io/libs-release' }
        maven { url "http://nexus.wusong.com:8081/nexus/content/groups/public/" }
        maven { url 'http://nexus.tiantong.com/nexus/content/groups/public' }
        mavenCentral()
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.3.3.RELEASE'
        classpath 'org.springframework:springloaded:1.2.5.RELEASE'
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'

jar {
    baseName = 'kafka-spring-demo'
    version = '1.0'
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}

repositories {
    mavenLocal()
    maven { url 'http://repo.spring.io/libs-release' }
    maven { url "http://nexus.wusong.com:8081/nexus/content/groups/public/" }
    maven { url 'http://nexus.tiantong.com/nexus/content/groups/public' }
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    springFrameworkVersion = '4.2.5.RELEASE'
}

dependencies {
    compile(
            "org.springframework:spring-core:${springFrameworkVersion}",
            "org.springframework:spring-beans:${springFrameworkVersion}",
            "org.springframework:spring-context:${springFrameworkVersion}",
            "org.springframework:spring-aop:${springFrameworkVersion}",
            "org.springframework:spring-tx:${springFrameworkVersion}",
            'org.springframework.boot:spring-boot-starter-web',
            'commons-logging:commons-logging:1.2',
            'org.slf4j:slf4j-api:1.7.9',
            'log4j:log4j:1.2.17',
            'ch.qos.logback:logback-core:1.1.6',
            'ch.qos.logback:logback-classic:1.1.6',
            'ch.qos.logback:logback-access:1.1.6',

            //Kafka
            "org.springframework.kafka:spring-kafka:1.0.2.RELEASE",
    )
    testCompile(
            'junit:junit:4.12',
            'org.springframework.boot:spring-boot-starter-test',
    )
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

[compileJava, javadoc, compileTestJava]*.options*.encoding = 'UTF-8'

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

